prismfilename = 'prism_brain_purines.xlsx'
# First column  umber of MID data
index1 = 4
# Maximum # samples for any one condition
max = 9
####################### Read and normalize the data ###################################
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
# Save the data
write_xlsx(norm_data,opfilename)
#################################################### Save the data in prism format ##################################
prism_data = NULL
for (i in 1:length(metabs))
{
m = metabs[i]
ndata = norm_data[[m]]
groups = data.frame(t(data.frame(strsplit(ndata$SampleGroups,"_",fixed = TRUE))),row.names = NULL)
colnames(groups) = c('time','condition')
all_times = unique(groups$time)
all_conditions = unique(groups$condition)
for (k in index1:ncol(ndata))
{
pdata = data.frame(matrix(ncol = max*length(all_conditions), nrow = length(all_times)))
row.names(pdata) = all_times
for (j in 1:length(all_conditions))
{
idx1 = ((j-1)*max+1)
idx2 = j*max
colnames(pdata)[idx1:idx2] = paste(all_conditions[j],c(1:max), sep = "")
for (n in 1:length(all_times))
{
val = ndata[groups$time == all_times[n] & groups$condition == all_conditions[j],k]
if(length(val) > 0)
{
pdata[n,idx1:(idx1+length(val)-1)] = val
}
}
}
pdata$time = row.names(pdata)
prism_data[[paste(m,colnames(ndata)[k], sep = "_")]] = pdata
}
}
write_xlsx(prism_data,prismfilename)
library(readxl)
library(writexl)
######################## User-defined inputs ###########################################
# Filenames
datafile = 'brain_purines.xlsx'
factorfile = 'SE_factors2.xlsx'
opfilename = 'SEnorm_brain_purines.xlsx'
prismfilename = 'prism_brain_purines.xlsx'
# First column  umber of MID data
index1 = 4
# Maximum # samples for any one condition
max = 9
####################### Read and normalize the data ###################################
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
i
m = metabs[i]
ndata = norm_data[[m]]
groups = data.frame(t(data.frame(strsplit(ndata$SampleGroups,"_",fixed = TRUE))),row.names = NULL)
colnames(groups) = c('time','condition')
all_times = unique(groups$time)
all_conditions = unique(groups$condition)
m
all_conditions
pdata = data.frame(matrix(ncol = max*length(all_conditions), nrow = length(all_times)))
row.names(pdata) = all_times
for (j in 1:length(all_conditions))
{
idx1 = ((j-1)*max+1)
idx2 = j*max
colnames(pdata)[idx1:idx2] = paste(all_conditions[j],c(1:max), sep = "")
for (n in 1:length(all_times))
{
val = ndata[groups$time == all_times[n] & groups$condition == all_conditions[j],k]
if(length(val) > 0)
{
pdata[n,idx1:(idx1+length(val)-1)] = val
}
}
}
for (k in index1:ncol(ndata))
{
pdata = data.frame(matrix(ncol = max*length(all_conditions), nrow = length(all_times)))
row.names(pdata) = all_times
for (j in 1:length(all_conditions))
{
idx1 = ((j-1)*max+1)
idx2 = j*max
colnames(pdata)[idx1:idx2] = paste(all_conditions[j],c(1:max), sep = "")
for (n in 1:length(all_times))
{
val = ndata[groups$time == all_times[n] & groups$condition == all_conditions[j],k]
if(length(val) > 0)
{
pdata[n,idx1:(idx1+length(val)-1)] = val
}
}
}
pdata$time = row.names(pdata)
prism_data[[paste(m,colnames(ndata)[k], sep = "_")]] = pdata
}
datafile = 'brain_purines.xlsx'
factorfile = 'SE_factors2.xlsx'
opfilename = 'SEnorm_brain_purines.xlsx'
prismfilename = 'prism_brain_purines.xlsx'
# First column  umber of MID data
index1 = 4
# Maximum # samples for any one condition
max = 9
####################### Read and normalize the data ###################################
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
j
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f
raw_data$Animal_ID[j]
View(raw_data)
library(readxl)
library(writexl)
######################## User-defined inputs ###########################################
# Filenames
datafile = 'brain_purines.xlsx'
factorfile = 'SE_factors2.xlsx'
opfilename = 'SEnorm_brain_purines.xlsx'
prismfilename = 'prism_brain_purines.xlsx'
# First column  umber of MID data
index1 = 4
# Maximum # samples for any one condition
max = 9
####################### Read and normalize the data ###################################
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
# Save the data
write_xlsx(norm_data,opfilename)
#################################################### Save the data in prism format ##################################
prism_data = NULL
for (i in 1:length(metabs))
{
m = metabs[i]
ndata = norm_data[[m]]
groups = data.frame(t(data.frame(strsplit(ndata$SampleGroups,"_",fixed = TRUE))),row.names = NULL)
colnames(groups) = c('time','condition')
all_times = unique(groups$time)
all_conditions = unique(groups$condition)
for (k in index1:ncol(ndata))
{
pdata = data.frame(matrix(ncol = max*length(all_conditions), nrow = length(all_times)))
row.names(pdata) = all_times
for (j in 1:length(all_conditions))
{
idx1 = ((j-1)*max+1)
idx2 = j*max
colnames(pdata)[idx1:idx2] = paste(all_conditions[j],c(1:max), sep = "")
for (n in 1:length(all_times))
{
val = ndata[groups$time == all_times[n] & groups$condition == all_conditions[j],k]
if(length(val) > 0)
{
pdata[n,idx1:(idx1+length(val)-1)] = val
}
}
}
pdata$time = row.names(pdata)
prism_data[[paste(m,colnames(ndata)[k], sep = "_")]] = pdata
}
}
write_xlsx(prism_data,prismfilename)
library(readxl)
library(writexl)
######################## User-defined inputs ###########################################
# Filenames
datafile = 'timecourse_plasma_all.xlsx'
factorfile = 'SE_factors_plasma.xlsx'
opfilename = 'SEnorm_plasma_all.xlsx'
prismfilename = 'SEnorm_plasma_all_prism.xlsx'
# First column  umber of MID data
index1 = 4
# Maximum # samples for any one condition
max = 12
####################### Read and normalize the data ###################################
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
# Save the data
write_xlsx(norm_data,opfilename)
#################################################### Save the data in prism format ##################################
prism_data = NULL
for (i in 1:length(metabs))
{
m = metabs[i]
ndata = norm_data[[m]]
all_times = unique(ndata$Time)
all_conditions = unique(factors$Condition)
for (k in index1:ncol(ndata))
{
pdata = data.frame(matrix(ncol = max*length(all_conditions), nrow = length(all_times)))
row.names(pdata) = all_times
for (j in 1:length(all_conditions))
{
idx1 = ((j-1)*max+1)
idx2 = j*max
colnames(pdata)[idx1:idx2] = paste(all_conditions[j],c(1:max), sep = "")
condition_samples = factors$Animal_ID[factors$Condition == all_conditions[j]]
for (n in 1:length(all_times))
{
val = ndata[ndata$Time == all_times[n] & ndata$Animal_ID %in% condition_samples,k]
if(length(val) > 0)
{
pdata[n,idx1:(idx1+length(val)-1)] = val
}
}
}
pdata$time = row.names(pdata)
prism_data[[paste(m,colnames(ndata)[k], sep = "_")]] = pdata
}
}
write_xlsx(prism_data,prismfilename)
library(readxl)
library(writexl)
######################## User-defined inputs ###########################################
# Filenames
datafile = 'timecourse_plasma_all.xlsx'
factorfile = 'SE_factors_plasma.xlsx'
opfilename = 'SEnorm_plasma_all.xlsx'
prismfilename = 'SEnorm_plasma_all_prism.xlsx'
# First column  umber of MID data
index1 = 4
# Maximum # samples for any one condition
max = 12
####################### Read and normalize the data ###################################
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
# Save the data
write_xlsx(norm_data,opfilename)
#################################################### Save the data in prism format ##################################
prism_data = NULL
for (i in 1:length(metabs))
{
m = metabs[i]
ndata = norm_data[[m]]
all_times = unique(ndata$Time)
all_conditions = unique(factors$Condition)
for (k in index1:ncol(ndata))
{
pdata = data.frame(matrix(ncol = max*length(all_conditions), nrow = length(all_times)))
row.names(pdata) = all_times
for (j in 1:length(all_conditions))
{
idx1 = ((j-1)*max+1)
idx2 = j*max
colnames(pdata)[idx1:idx2] = paste(all_conditions[j],c(1:max), sep = "")
condition_samples = factors$Animal_ID[factors$Condition == all_conditions[j]]
for (n in 1:length(all_times))
{
val = ndata[ndata$Time == all_times[n] & ndata$Animal_ID %in% condition_samples,k]
if(length(val) > 0)
{
pdata[n,idx1:(idx1+length(val)-1)] = val
}
}
}
pdata$time = row.names(pdata)
prism_data[[paste(m,colnames(ndata)[k], sep = "_")]] = pdata
}
}
write_xlsx(prism_data,prismfilename)
library(readxl)
library(writexl)
######################## User-defined inputs ###########################################
# Filenames
datafile = 'brain_pyruvate_dhap.xlsx'
factorfile = 'SE_factors2.xlsx'
opfilename = 'SEnorm_brain_pyruvate_dhap.xlsx'
prismfilename = 'prism_brain_pyruvate_dhap.xlsx'
# First column  umber of MID data
index1 = 4
# Maximum # samples for any one condition
max = 9
####################### Read and normalize the data ###################################
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
# Save the data
write_xlsx(norm_data,opfilename)
#################################################### Save the data in prism format ##################################
prism_data = NULL
for (i in 1:length(metabs))
{
m = metabs[i]
ndata = norm_data[[m]]
groups = data.frame(t(data.frame(strsplit(ndata$SampleGroups,"_",fixed = TRUE))),row.names = NULL)
colnames(groups) = c('time','condition')
all_times = unique(groups$time)
all_conditions = unique(groups$condition)
for (k in index1:ncol(ndata))
{
pdata = data.frame(matrix(ncol = max*length(all_conditions), nrow = length(all_times)))
row.names(pdata) = all_times
for (j in 1:length(all_conditions))
{
idx1 = ((j-1)*max+1)
idx2 = j*max
colnames(pdata)[idx1:idx2] = paste(all_conditions[j],c(1:max), sep = "")
for (n in 1:length(all_times))
{
val = ndata[groups$time == all_times[n] & groups$condition == all_conditions[j],k]
if(length(val) > 0)
{
pdata[n,idx1:(idx1+length(val)-1)] = val
}
}
}
pdata$time = row.names(pdata)
prism_data[[paste(m,colnames(ndata)[k], sep = "_")]] = pdata
}
}
write_xlsx(prism_data,prismfilename)
setwd("C:/Users/baharan/University of Michigan Dropbox/Baharan Meghdadi/Lab_Baharan/Anjali/iMFA/saturation_enrichment")
library(readxl)
library(writexl)
# Filenames
datafile = 'input_data_perform_SEnorm/brain_metabolites.xlsx'
factorfile = 'SE_factors.xlsx'
opfilename = 'output_SEnorm/SEnorm_brain_metabolites.xlsx'
# First column  number of MID data
index1 = 4
# Maximum # samples for any one condition
max = 9
# MID data
metabs = excel_sheets(datafile)
data = lapply(metabs,function(x) data.frame(read_excel(datafile,sheet = x)))
names(data) = metabs
# Normalization factors
factors = read_excel(factorfile)
# Normalize
norm_data = data
for (i in 1:length(metabs))
{
raw_data = norm_data[[i]]
ndata = raw_data
index2 = ncol(raw_data)
ndata$M0 = NA
for (j in 1:nrow(raw_data))
{
f = factors$factor[factors$Animal_ID == raw_data$Animal_ID[j]]
f = round(f,2)
ndata[j,index1:index2] = raw_data[j,index1:index2]*f
ndata$M0[j] = 100-sum(ndata[j,index1:index2])
}
norm_data[[i]] = ndata
}
# Save the data
write_xlsx(norm_data,opfilename)
